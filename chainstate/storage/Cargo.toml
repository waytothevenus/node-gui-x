[package]
name = "chainstate-storage"
license.workspace = true
version.workspace = true
edition.workspace = true
rust-version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
accounting = { path = "../../accounting" }
chainstate-types = { path = "../types" }
common = { path = "../../common" }
logging = { path = "../../logging" }
orders-accounting = { path = "../../orders-accounting" }
pos-accounting = { path = "../../pos-accounting" }
randomness = { path = "../../randomness" }
serialization = { path = "../../serialization" }
storage = { path = "../../storage" }
storage-inmemory = { path = "../../storage/inmemory" }
tokens-accounting = { path = "../../tokens-accounting" }
utils = { path = "../../utils" }
utxo = { path = "../../utxo" }

mockall = { workspace = true, optional = true }

parity-scale-codec.workspace = true

[dev-dependencies]
crypto = { path = "../../crypto" }
test-utils = { path = "../../test-utils" }

itertools.workspace = true
rstest.workspace = true
mockall.workspace = true
num-traits.workspace = true

[features]
mock = [ "mockall" ]
expensive-reads = []

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(loom)'] }
